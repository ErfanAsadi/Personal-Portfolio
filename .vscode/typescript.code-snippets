{
  "Console with variable appended": {
    "prefix": "logv",
    "body": [
      "console.log(\"$1: \", $1);"
    ],
    "description": "log variable"
  },
  "Story Book": {
    "prefix": "story",
    "body": [
      "import React from \"react\";",
      "import { ComponentStory, ComponentMeta } from \"@storybook/react\";",
      "import { ${TM_FILENAME/[.].*/$1/}, ${TM_FILENAME/[.].*/$1/}Props } from \"./${TM_FILENAME/[.].*/$1/}\";",
      "",
      "export default {",
      "\ttitle: \"... / ${TM_FILENAME/[.].*/$1/}\",",
      "\tcomponent: ${TM_FILENAME/[.].*/$1/},",
      "\targTypes: {",
      "\t\tbackgroundColor: { control: \"color\" },",
      "\t},",
      "} as ComponentMeta<typeof ${TM_FILENAME/[.].*/$1/}>;",
      "",
      "const Template: ComponentStory<typeof ${TM_FILENAME/[.].*/$1/}> = (args: any) => <${TM_FILENAME/[.].*/$1/} {...args} />;",
      "",
      "export const ${TM_FILENAME/[.].*/$1/}Default = Template.bind({});",
      "",
      "${TM_FILENAME/[.].*/$1/}Default.args = {} as const;",
      "",
      "${TM_FILENAME/[.].*/$1/}Default.parameters = {",
      "layout: \"centered\",",
      "} as const;",
      "",
    ],
    "description": "Story Book",
  },
  "TypeScript React Function Component": {
    "prefix": "rcomp",
    "body": [
      "import { FC } from \"react\";",
      "import styled from \"@emotion/styled\";",
      "",
      "export interface ${TM_FILENAME/[.].*/$1/}Props {",
      "\t$1",
      "\tclassName?: string;",
      "}",
      "",
      "export const ${TM_FILENAME/[.].*/$1/}: FC<${TM_FILENAME/[.].*/$1/}Props> = (props) => {",
      "\tconst { $2className } = props;",
      "\treturn <Container className={className}>{props.children}</Container>;",
      "};",
      "",
      "const Container = styled.div`",
      "",
      "`;",
      "",
      "export default ${TM_FILENAME/[.].*/$1/};\n",
    ],
    "description": "React Function Component in TypeScript"
  },
  "NextPage": {
    "prefix": "nextp",
    "body": [
      "import React from \"react\";",
      "import { NextPage, GetStaticProps } from \"next\";",
      "import { initializeApollo, addApolloState } from \"\\$lib/apollo/apolloClient\";",
      "",
      "const ${1:${TM_FILENAME_BASE}}: NextPage = () => {",
      "  return ${2:<div>${3:${TM_FILENAME/[.].*/$1/}}</div>};",
      "};",
      "",
      "export const getStaticProps: GetStaticProps = async () => {",
      "  const apolloClient = initializeApollo();",
      "  return addApolloState(apolloClient, {",
      "    props: {},",
      "    revalidate: 1,",
      "  })",
      "}",
      "",
      "export default $1;",
    ],
    "description": "next page"
  },
  "Log to console": {
    "prefix": "lg",
    "body": [
      "console.log(` ==> $1 ==> `, $1)"
    ],
    "description": "Log output to the console"
  }
}